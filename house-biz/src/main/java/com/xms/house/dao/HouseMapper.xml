<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xms.house.dao.HouseMapper">
  <resultMap id="BaseResultMap" type="com.xms.house.entity.House">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="BIT" property="type" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="images" jdbcType="VARCHAR" property="images" />
    <result column="area" jdbcType="INTEGER" property="area" />
    <result column="beds" jdbcType="INTEGER" property="beds" />
    <result column="baths" jdbcType="INTEGER" property="baths" />
    <result column="rating" jdbcType="DOUBLE" property="rating" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="properties" jdbcType="VARCHAR" property="properties" />
    <result column="floor_plan" jdbcType="VARCHAR" property="floorPlan" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="community_id" jdbcType="INTEGER" property="communityId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="state" jdbcType="BIT" property="state" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, name, type, price, images, area, beds, baths, rating, remarks, properties, floor_plan, 
    tags, create_time, city_id, community_id, address, state
  </sql>
  
    <sql id="houseField">
     a.id,
     a.type,
     a.name,
     a.price,
     a.images,
     a.area,
     a.beds,
     a.baths,
     a.rating,
     a.remarks,
     a.properties,
     a.floor_plan,
     a.tags,
     a.create_time,
     a.city_id,
     a.community_id,
     a.address,
     a.state
   </sql>
   
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from house
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from house
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  
  <insert id="insertSelective" parameterType="com.xms.house.entity.House">
    insert into house
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="images != null">
        images,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="beds != null">
        beds,
      </if>
      <if test="baths != null">
        baths,
      </if>
      <if test="rating != null">
        rating,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="properties != null">
        properties,
      </if>
      <if test="floorPlan != null">
        floor_plan,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="communityId != null">
        community_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="images != null">
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=INTEGER},
      </if>
      <if test="beds != null">
        #{beds,jdbcType=INTEGER},
      </if>
      <if test="baths != null">
        #{baths,jdbcType=INTEGER},
      </if>
      <if test="rating != null">
        #{rating,jdbcType=DOUBLE},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="properties != null">
        #{properties,jdbcType=VARCHAR},
      </if>
      <if test="floorPlan != null">
        #{floorPlan,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="communityId != null">
        #{communityId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.xms.house.entity.House">
    update house
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=BIT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="images != null">
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=INTEGER},
      </if>
      <if test="beds != null">
        beds = #{beds,jdbcType=INTEGER},
      </if>
      <if test="baths != null">
        baths = #{baths,jdbcType=INTEGER},
      </if>
      <if test="rating != null">
        rating = #{rating,jdbcType=DOUBLE},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="properties != null">
        properties = #{properties,jdbcType=VARCHAR},
      </if>
      <if test="floorPlan != null">
        floor_plan = #{floorPlan,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="communityId != null">
        community_id = #{communityId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.xms.house.entity.House">
    update house
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT},
      price = #{price,jdbcType=INTEGER},
      images = #{images,jdbcType=VARCHAR},
      area = #{area,jdbcType=INTEGER},
      beds = #{beds,jdbcType=INTEGER},
      baths = #{baths,jdbcType=INTEGER},
      rating = #{rating,jdbcType=DOUBLE},
      remarks = #{remarks,jdbcType=VARCHAR},
      properties = #{properties,jdbcType=VARCHAR},
      floor_plan = #{floorPlan,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      city_id = #{cityId,jdbcType=INTEGER},
      community_id = #{communityId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
   <sql id="houseCondition">
    <if test="house.userId != null and house.userId != 0">
        inner join (select house_id,user_id from house_user 
                   <where>
                     user_id = #{house.userId}
                     <if test="house.bookmarked != null and house.bookmarked == true">
                         and type = 2
                     </if>
                     <if test="house.bookmarked != null and house.bookmarked == false">
                         and type =1
                     </if>
                   </where>
                   ) b
         on a.id = b.house_id
    </if>
    <where>
        <!-- 这里要注意只显示上架的房产 -->
        state = 1
       <if test="house.id !=null and house.id !=0">
          and a.id = #{house.id}
       </if>
       <if test="house.type != null">
          and a.type = #{house.type}
       </if>    
       <if test="house.communityId != null" >
         and a.community_id = #{house.communityId}
       </if>
       <if test="house.name != null and house.name != '' " >
         <bind name="pattern1" value = "'%' + house.name + '%'" />
         and a.name like #{pattern1}
       </if> 
       <if test="house.ids != null and house.ids.size() > 0">
         and a.id in 
           <foreach collection="house.ids" item="item" index="index" open="(" close=")" separator="," >
              #{item}           
           </foreach>
       </if>
    </where>
   </sql>
   
   <select id="selectPageHouses" resultMap="BaseResultMap">
     select <include refid="houseField" />
     from house a
     <include refid="houseCondition"></include>
     <choose>
        <when test="house.sort != null and house.sort == 'price_asc'">
           order by a.price asc
        </when>
        <when test="house.sort != null and house.sort == 'price_desc'">
           order by a.price desc
        </when>
        <otherwise>
          order by a.create_time desc
        </otherwise>
     </choose>
     <if test ="pageParams.offset !=null and pageParams.limit != null">
         limit #{pageParams.offset},#{pageParams.limit}        
     </if>
     <if test="pageParams.offset == null and pageParams.limit != null">
         limit #{pageParams.limit}
     </if>
   </select>
   
   <select id="selectPageCount" resultType="long">
     select count(id)
     from house a
     <include refid="houseCondition"></include>
   </select>
   
   <select id="selectCommunity" resultType="com.xms.house.entity.Community">
     select * 
     from community
     <where>
        <if test="id != null and id != 0">
          and id = #{id}
        </if>
        <if test="name != null and name != ''">
          and name = #{name}
        </if>
     </where>
   </select>
   
   <select id="selectHouseUser" resultType="com.xms.house.entity.HouseUser">
     select id,house_id,user_id,create_time,type
     from house_user
     where house_id = #{id} and user_id = #{userId} and type = #{type}
   </select>
   
   <select id="selectSaleHouseUser" resultType="com.xms.house.entity.HouseUser">
     select id,house_id,user_id,create_time,type
     from house_user
     where house_id = #{id} and  type = 1
     limit 1
   </select>
   
   <update id="updateHouse">
      update house
      set  rating = #{rating}
      where id = #{id}
   </update>
   
     <update id="downHouse">
      update house
      set    state = 2
      where  id = #{id}
    </update>
      <insert id="insert"  useGeneratedKeys="true" keyProperty="id">
     insert into house(
                     type,
                     name,
                     price,
                     images,
                     area,
                     beds,
                     baths,
                     rating,
                     remarks,
                     properties,
                     floor_plan,
                     tags,
                     create_time,
                     city_id,
                     community_id,
                     address,
                     state
                  )
                 value(
                     #{type},
                     #{name},
                     #{price},
                     #{images},
                     #{area},
                     #{beds},
                     #{baths},
                     #{rating},
                     #{remarks},
                     #{properties},
                     #{floorPlan},
                     #{tags},
                     #{createTime},
                     #{cityId},
                     #{communityId},
                     #{address},
                     #{state}
                     )
   </insert>

   
   <insert id="insertHouseUser">
     insert into house_user (house_id,
                             user_id,
                             create_time,
                             type)
                     value(
                       #{houseId},
                       #{userId},
                       #{createTime},
                       #{type}
                     )
                     
   </insert>
   
     <insert id="insertUserMsg">
     insert into house_msg (
                     msg,
                     create_time,
                     user_name,
                     house_id,
                     agent_id
                     )
                     value(
                      #{msg},
                      #{createTime},
                      #{userName},
                      #{houseId},
                      #{agentId}
                     )
    </insert>
    
    <delete id="deleteHouseUser">
      delete from house_user
      where  house_id = #{id} and user_id = #{userId} and type=#{type}
    
    </delete>
   
</mapper>